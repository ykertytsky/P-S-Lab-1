log(100); log10(100); log(100,10)     # logarithms
sin(pi/2); tan(pi/2)                  # trig
sqrt(1/2^2)                           # squares and roots
exp(cos(pi/2))                        # exponents
log(100)     # logarithms
sin(pi/2); tan(pi/2)                  # trig
sqrt(1/2^2)                           # squares and roots
exp(cos(pi/2))                        # exponents
# increasing sequences
1:10; seq(1,10); c(1,2,3,4,5,6,7,8,9,10)
# decreasing sequences
10:1; seq(10,1); seq(10,1,by=-1); seq(10,1,length=10)
# sequences with rep = repeat
rep(1:5,3); rep(1:5,each=3); rep(1:5,c(3,3,3,3,3)); rep(1:5,rep(3,5));
rep(1:5, length.out = 13)
# yet another way
vctr <- seq(0,1,by=.1); seq(1:length(vctr)); seq(along = vctr)
a <- seq(-1, 1, length=5); a; a^2; 2*a
#  can you guess what 2^a is?
print("Can you quess what 2^a is?"); 2^a
# indexing
a[1]; a[-1]
a[c(5,1)]; a[-c(5,1)]
# operations with 2 sequences
b <- c(4,-1,1,2,4); b
a+b; a^b
# logical
a>0; a[a>0]; sum(a<=0)
# changing vectors
a <- 1/a; a
a[3] <- b[3]; a; b[3]
1:100
a <- seq(-1, 2, length=100);
a <- seq(-1, 2, length=100);
a
# 1
a <- seq(-1, 2, length=100);
# 2
b <- a[1]
# 1
a <- seq(-1, 2, length=100);
# 2
b <- a[1]
b
# 1
a <- seq(-2, 1, length=100);
# 2
b <- seq(a[1], a[-1], lenght=100)
# 1
a <- seq(-2, 1, length=100);
# 2
b <- seq(a[1], a[-1], length=100)
# 1
a <- seq(-2, 1, length=100);
# 2
b <- seq(a[1], 1, length=100)
# 1
a <- seq(-2, 1, length=100);
# 2
b <- seq(a[1], 1, length=100)
b
# 1
a <- seq(-2, 1, length=100);
# 2
b <- seq(a[1], a[length(a)], length=100)
b
# 1
a <- seq(-2, 1, length=100);
# 2
b <- seq(a[1], a[length(a)], length=50)
b
# 1
a <- seq(-2, 1, length=100);
# 2
b <- seq(a[1], a[length(a)], length=50)
b
# 1
a <- seq(-2, 1, length=100);
# 2
b <- seq(a[1], a[length(a)], length=100)
b
# 1
a <- seq(-2, 1, length=100);
# 2
b <- seq(a[1], a[length(a)], by=2 length=100)
# 1
a <- seq(-2, 1, length=100);
# 2
b <- seq(a[1], a[length(a)], by=2, length=100)
# 1
a <- seq(-2, 1, length=100);
# 2
b <- a[seq(1, length(a), by = 2)]
b
# 1
a <- seq(-2, 1, length=100);
# 2
b <- a[seq(1, length(a), by = 2)]
b <- seq(a[1], a[length(a)], by=2, length=100)
# 1
a <- seq(-2, 1, length=100);
# 2
b <- a[seq(1, length(a), by = 2)]
# b <- seq(a[1], a[length(a)], by=2, length=100)
b
# 1
a <- seq(-2, 1, length=100);
# 2
b <- seq(a[1], a[length(a)], by=2)
b
# 1
a <- seq(-2, 1, length=100);
# 2
b <- a[1, lenght(a), by=2]
# 1
a <- seq(-2, 1, length=100);
# 2
b <- a[1, length(a), by=2]
# 1
a <- seq(-2, 1, length=100);
# 2
b <- a[seq(1, length(a), by=2)]
b
# 1
a <- seq(-2, 1, length=100);
# 2
b <- a[seq(1, length(a), by=2)]
# sum
ab = a + b
ab
# 1
a <- seq(-2, 1, length=100);
# 2
b <- a[seq(1, length(a), by=2)]
# sum
ab = a + b
ab = a-b
# 1
a <- seq(-2, 1, length=100);
# 2
b <- a[seq(1, length(a), by=2)]
# sum
ab = a + b
ab = a-b
# 1
a <- seq(-2, 1, length=100);
# 2
b <- a[seq(1, length(a), by=2)]
# sum
ab = a + b
ab = a-b
ab
# 1
a <- seq(-2, 1, length=100);
# 2
b <- a[seq(1, length(a), by=2)]
# sum
ab = a + b
ab = a-b
ab = a*b
ab
# 1
a <- seq(-2, 1, length=100);
# 2
b <- a[seq(1, length(a), by=2)]
# sum
ab = a + b
ab = a-b
ab = a*b
ab.mean()
# 1
a <- seq(-2, 1, length=100);
# 2
b <- a[seq(1, length(a), by=2)]
# sum
ab = a + b
ab = a-b
ab = a*b
mean(ab)
# 1
a <- seq(-2, 1, length=100);
# 2
b <- a[seq(1, length(a), by=2)]
# sum
ab = a + b
ab = a-b
ab = a*b
mean(ab)
variance(ab)
# 1
a <- seq(-2, 1, length=100);
# 2
b <- a[seq(1, length(a), by=2)]
# sum
ab = a + b
ab = a-b
ab = a*b
mean(ab)
var(a, b)
# 1
a <- seq(-2, 1, length=100);
# 2
b <- a[seq(1, length(a), by=2)]
# sum
ab = a + b
ab = a-b
ab = a*b
mean(ab)
var(ab)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
install.packages("rstudioapi")
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
View(datasets)
View(datasets)
View(datasets[["train"]])
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
View(df)
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
source("~/Documents/Studying/P&S/LAb1/data_preprocessing.R", echo = TRUE)
View(stop_wrds)
